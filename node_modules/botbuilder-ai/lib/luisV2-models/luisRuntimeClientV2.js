"use strict";
/**
 * @module botbuilder-ai
 */
/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LUISRuntimeMappers = exports.LUISRuntimeModels = exports.LUISRuntimeClientV2 = void 0;
const Models = __importStar(require("./luisResult"));
exports.LUISRuntimeModels = Models;
const Mappers = __importStar(require("./luisMappers"));
exports.LUISRuntimeMappers = Mappers;
const luisPrediction_1 = require("./luisPrediction");
const luisRuntimeClientContext_1 = require("../luisRuntimeClientContext");
/**
 * Represents the LUIS client for V2 of the runtime.
 *
 * @remarks This is a clone of the LUISRuntimeClient in version 2 of the runtime.
 */
class LUISRuntimeClientV2 extends luisRuntimeClientContext_1.LUISRuntimeClientContext {
    /**
     * Initializes a new instance of the LUISRuntimeClientV2 class.
     *
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param endpoint Supported Cognitive Services endpoints (protocol and hostname, for example:
     * https://westus.api.cognitive.microsoft.com).
     * @param [options] The parameter options
     */
    constructor(credentials, endpoint, options) {
        super(credentials, endpoint, options);
        this.prediction = new luisPrediction_1.LuisPrediction(this);
        super.baseUri = '{Endpoint}/luis/v2.0';
    }
}
exports.LUISRuntimeClientV2 = LUISRuntimeClientV2;
//# sourceMappingURL=luisRuntimeClientV2.js.map